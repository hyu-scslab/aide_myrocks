Before setup
SELECT @@SQL_STATS_CONTROL;
@@SQL_STATS_CONTROL
OFF_HARD
SELECT @@WRITE_STATS_COUNT;
@@WRITE_STATS_COUNT
0
SELECT @@WRITE_STATS_FREQUENCY;
@@WRITE_STATS_FREQUENCY
0
SET @@GLOBAL.SQL_STATS_CONTROL="ON";
SET @@GLOBAL.WRITE_STATS_COUNT=10;
SET @@GLOBAL.WRITE_STATS_FREQUENCY=1;
SET @@GLOBAL.WRITE_STATISTICS_HISTOGRAM_WIDTH=100;
After setup
SELECT @@SQL_STATS_CONTROL;
@@SQL_STATS_CONTROL
ON
SELECT @@WRITE_STATS_COUNT;
@@WRITE_STATS_COUNT
10
SELECT @@WRITE_STATS_FREQUENCY;
@@WRITE_STATS_FREQUENCY
1
SELECT @@GLOBAL.WRITE_STATISTICS_HISTOGRAM_WIDTH;
@@GLOBAL.WRITE_STATISTICS_HISTOGRAM_WIDTH
100
Case 1: Write statistics histogram collection
use test;
CREATE TABLE tables (
TABLE_CATALOG varchar(512),
TABLE_SCHEMA varchar(64),
TABLE_NAME varchar(64),
TABLE_TYPE varchar(64),
ENGINE varchar(64),
VERSION bigint(21) unsigned,
ROW_FORMAT varchar(10),
TABLE_ROWS bigint(21) unsigned,
AVG_ROW_LENGTH bigint(21) unsigned,
DATA_LENGTH bigint(21) unsigned,
MAX_DATA_LENGTH bigint(21) unsigned,
INDEX_LENGTH bigint(21) unsigned,
DATA_FREE bigint(21) unsigned,
AUTO_INCREMENT bigint(21) unsigned,
CREATE_TIME datetime,
UPDATE_TIME datetime,
CHECK_TIME datetime,
TABLE_COLLATION varchar(32),
CHECKSUM bigint(21) unsigned,
CREATE_OPTIONS varchar(255),
TABLE_COMMENT varchar(2048)
);
insert into tables select * from information_schema.tables;
Case 1.1: expect to see [count=1,sum=1]
select count(*), sum(count_bucket)
from information_schema.write_statistics_histogram
where count_bucket > 0;
count(*)	sum(count_bucket)
0	NULL
insert into tables select * from tables;
Case 1.2: expect to see [count=1,sum=2]
select count(*), sum(count_bucket)
from information_schema.write_statistics_histogram
where count_bucket > 0;
count(*)	sum(count_bucket)
1	1
insert into tables select * from tables;
Case 1.3: expect to see [count=1,sum=3]
select count(*), sum(count_bucket)
from information_schema.write_statistics_histogram
where count_bucket > 0;
count(*)	sum(count_bucket)
1	2
insert into tables select * from tables;
Case 1.4: expect to see [count=1,sum=4]
select count(*), sum(count_bucket)
from information_schema.write_statistics_histogram
where count_bucket > 0;
count(*)	sum(count_bucket)
1	3
Case 2: Dynamically change write_statistics_histogram_width
SET @@GLOBAL.write_statistics_histogram_width=100;
Case 2.1: histogram data is lost, expect [count=0,sum=NULL]
select count(*), sum(count_bucket)
from information_schema.write_statistics_histogram
where count_bucket > 0;
count(*)	sum(count_bucket)
0	NULL
insert into tables select * from information_schema.tables;
Case 2.2: expect to see one row [count=1,sum=1]
select count(*), sum(count_bucket)
from information_schema.write_statistics_histogram
where count_bucket > 0;
count(*)	sum(count_bucket)
1	1
Cleanup
drop table tables;
SET @@GLOBAL.SQL_STATS_CONTROL="OFF_HARD";
SET @@GLOBAL.WRITE_STATS_COUNT=0;
SET @@GLOBAL.WRITE_STATS_FREQUENCY=0;
SET @@GLOBAL.write_statistics_histogram_width=100;
