--source include/no_perfschema.inc
--source include/count_sessions.inc

set global sql_stats_control = ON;
use information_schema;

--echo #
--echo # Verify with nothing
--echo #
select 1;

select * from sql_text;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

--echo #
--echo # Verify with async id
--echo #
/* async-12345 */ select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

--echo #
--echo # Verify with query attrs = qa_test1
--echo #   original_caller QA = oc_qa_test1 (not allowed yet)
--echo #
query_attrs_add caller qa_test1;
query_attrs_add original_caller oc_qa_test1;
select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

--echo #
--echo # Verify with query attrs = qa_test1
--echo #   original_caller QA = oc_qa_test1 (allowed)
--echo #
set @saved_client_attribute_names=@@GLOBAL.client_attribute_names;
set global client_attribute_names='caller,original_caller,async_id';
select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

--echo #
--echo # Verify with query attrs = qa_test1 and async id
--echo #   original_caller QA = oc_qa_test1
--echo #
/* async-12345 */ select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

--echo #
--echo # Verify with query attrs = qa_test1 and async id using query attrs
--echo #   original_caller QA = oc_qa_test1
--echo #
query_attrs_add async_id 56789;
select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

--echo #
--echo # Verify with query attrs = qa_test1 and async id using query attrs (and query comments)
--echo #   original_caller QA = oc_qa_test1
--echo #
/* async-12345 */ select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

# change user command to re-send connection attributes
create user user@localhost identified by 'su';
grant all on *.* to user@localhost with grant option;

connect (con1, localhost, user, su, test);
conn_attrs_add caller ca_test2;
conn_attrs_add original_caller oc_ca_test2;
conn_attrs_add async_id 56789;
# change_user is needed just to set the correct connection attributes.
change_user user,su,test;
use information_schema;

--echo #
--echo # Verify with just conn attrs = ca_test2 and original_caller CA = oc_ca_test2
--echo #
select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

--echo #
--echo # Verify with conn attrs = ca_test2 and async id
--echo #  original_caller CA = oc_ca_test2
--echo #
/* async-12345 */ select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

--echo #
--echo # Verify with just conn attrs = ca_test2 and query attrs = qa_test3
--echo #  original_caller CA = oc_ca_test2 and original_caller QA = oc_qa_test3
--echo #
query_attrs_add caller qa_test3;
query_attrs_add original_caller oc_qa_test3;
select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

--echo #
--echo # Verify with just conn attrs = ca_test2 and query attrs = qa_test3 and async id
--echo #  original_caller CA = oc_ca_test2 and original_caller QA = oc_qa_test3
--echo #
/* async-12345 */ select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

--echo #
--echo # Verify with just conn attrs = ca_test2 and original_caller CA = oc_ca_test2 again
--echo #
query_attrs_reset;
select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

set global sql_stats_control = OFF_HARD;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

set global sql_stats_control = ON;

--echo #
--echo # Test multiquery cases
--echo #
delimiter ||||;
/* async-12345 */ select 1; select 2;
||||
delimiter ;||||

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

query_attrs_add caller qa_test3;
query_attrs_add original_caller oc_qa_test3;
delimiter ||||;
/* async-12345 */ select 1; select 2;
||||
delimiter ;||||

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

query_attrs_reset;
conn_attrs_reset;
# change_user is needed just to set the correct connection attributes.
change_user user,su,test;
use information_schema;

set global sql_stats_control = OFF_HARD;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

set global sql_stats_control = ON;

--echo #
--echo # Verify with caller in query comment
--echo #
set global write_throttle_parse_query_comments = 1;
/* mtcaller-caller123: */ select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

--echo #
--echo # Verify with caller in a complex query comment
--echo #
/*some comment here:*//*mtcaller-caller456:*//*more comments*/ select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

--echo #
--echo # Verify only first occurence of caller is registered
--echo #
/*mtcaller-caller789:*//*mtcaller-caller987:*//*more comments*/ select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

set global write_throttle_parse_query_comments = DEFAULT;

--echo #
--echo # Verify caller is not parsed when write_throttle_parse_query_comments=0
--echo #
/*some comment here:*//*mtcaller-caller123:*//*more comments*/ select 1;

select stats.client_id, table_schema, user_name, execution_count, sql_id, client_attributes
from sql_statistics stats, client_attributes ca
where stats.client_id = ca.client_id
and sql_id = "db1589f429c8f6fbba750f47fbc7c130"
order by client_id;

connection default;

# Cleanup
set global client_attribute_names=@saved_client_attribute_names;
conn_attrs_reset;
set global sql_stats_control = DEFAULT;
drop user user@localhost;
disconnect con1;

--source include/wait_until_count_sessions.inc
